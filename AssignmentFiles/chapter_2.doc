- What is `NPM`?
NPM is apackge manager. Used to install, manage the supporting pacakges for React. They have packages to powered the react.
● - What is `Parcel/Webpack`? Why do we need it?
They are bundlers. They do alot more things like minifying, set dev server to run application locally. 
 code optimization,Port manage,generate prod build (dist folder). compression, Image optimization. Fast building . Hot module replacement (browser refresh as soon code chanhges built)
● - What is `.parcel-cache`
This folder created by parcel to cache certain thimgs for its functioality like HMR. 
● - What is `npx` ?
NPX is npm commond used to execute javascript modules/files/pacakge
● - What is difference between `dependencies` vs `devDependencies`
Dependencies are the package that required at runtime.
devDependencies ogject contain the packages required during developments
● - What is Tree Shaking?
Process of removinf unuaesd code in the source, by bundlers for optimization of sizes.
In production builds, Parcel statically analyzes the imports and exports of each module, and removes everything that isn't used. 
This is called "tree shaking" or "dead code elimination
https://parceljs.org/features/production/#:~:text=Tree%20shaking,-%23&text=In%20production%20builds%2C%20Parcel%20statically,or%20%22dead%20code%20elimination%22.
● - What is Hot Module Replacement?
THis HMR automatically update the modules in the browser without whole page refresh.

https://v1.parceljs.org/hmr.html#:~:text=Hot%20Module%20Replacement%20(HMR)%20improves,both%20JavaScript%20and%20CSS%20assets.
● - List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
1. Hot module replacement - On file save, rebuild the colde and send new code changes to client
2.Minification - Minification of all files involved - dist folder
3.Code optimization
4.Image optimization
5.Fast dev and Prod builds- Because of .parce-cache folder
6. Cleaning our code- By removing log functions.
7. Manage port number

● - What is `.gitignore`? What should we add and not add into it?
This file indicates waht files to be pushsed into git repo and whihc not. 
1. pacakge.json - Dont add to .gitignore
2.Pakcage-lock.json - Dont add to .gitignore
3.node-module - add t0 .gitignore as package-lock file can re-generate them in server 
4.parcel-cache - add to .gitignore as this is auto generated by npx parcel build
5.dist - add to .gitignore as this is automatically generated by npx parcel build
● - What is the difference between `package.json` and `package-lock.json`
package.json contain all packege, dependencies, devDependencies version used in the dev.These version for exact one or can be tend to auto update on new version release
package-lock.json. This file locsk the version of the pacakge/dependencies used . They are for productions usess

● - Why should I not modify `package-lock.json`?
They are used to determine the prod dependencies versions. So they shouldnt be changed.
● - What is `node_modules` ? Is it a good idea to push that on git?
THis is like a database for our pacakge/dependencies used in our application.It should not be pushed as it will consume more space/heavier. 
● - What is the `dist` folder?
This folder contain the optimized and minified code for production. npx parcel build index.htmls
● - What is `browserlists`
browserlists help to support all browsers compatability
Read about dif bundlers: vite, webpack, parcel
● Read about: ^ - caret and ~ - tilda
Both are used /represent that the version of the pacakge will get upgrated on new version release. But ^ for minor version upgrade. ~ for majpr version upgrade
● Read about Script types in html (MDN Docs)
